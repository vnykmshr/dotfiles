# Zsh aliases configuration

# Modern aliases for enhanced productivity

# =============================================================================
# Core System Aliases
# =============================================================================

# Navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ~='cd ~'
alias -- -='cd -'
alias ws='cd ~/workspace'
alias proj='cd ~/workspace/projects'

# List files with modern options
if command -v eza >/dev/null 2>&1; then
    # Modern replacement for ls
    alias ls='eza --group-directories-first'
    alias ll='eza -l --group-directories-first --time-style=long-iso'
    alias la='eza -la --group-directories-first --time-style=long-iso'
    alias lt='eza --tree --level=2'
    alias lta='eza --tree --all --level=2'
else
    # Traditional ls with good defaults
    alias ls='ls -hFG --color=auto'
    alias ll='ls -la'
    alias la='ls -A'
    alias lt='tree -L 2'
fi

# Directory listing shortcuts
alias lr='ls -R'                    # recursive ls
alias lx='ll -BX'                   # sort by extension
alias lz='ll -rS'                   # sort by size
alias lm='la | $PAGER'              # pipe through pager

# =============================================================================
# Safety First - Dangerous Command Protection
# =============================================================================

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
# BSD chmod (macOS) doesn't support --preserve-root
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    alias chmod='chmod --preserve-root'
    alias chown='chown --preserve-root'
    alias chgrp='chgrp --preserve-root'
fi

# Typo protection
alias shh='ssh'
alias sduo='sudo'
alias suod='sudo'

# =============================================================================
# System Information & Monitoring
# =============================================================================

# System info
alias df='df -h'
alias du='du -h'
alias ps='ps auxf'
alias psg='ps aux | grep'
alias top='top -o cpu'
alias cpu='htop --sort-key PERCENT_CPU'

# Cross-platform memory and process aliases
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS versions
    alias free='vm_stat'
    alias wotgobblemem='/bin/ps -o time,ppid,pid,nice,pcpu,pmem,user,comm -A | sort -n -k 6 | tail -15'
    alias memfree='vm_stat | awk "/Pages free/ {gsub(/\./, \"\", \$3); printf \"%.0f MB\\n\", \$3 * 4096 / 1024 / 1024}"'
    alias dskload='/bin/ps aux | awk "\$8 ~ /D/ {print}"'
else
    # Linux versions
    alias free='free -h'
    alias wotgobblemem='ps -o time,ppid,pid,nice,pcpu,pmem,user,comm -A | sort -n -k 6 | tail -15'
    alias memfree="free -m | sed -n -e '3p' | grep -Po '\\d+$'"
    alias dskload="ps faux | awk '\$8 ~ /D/{print}'"
fi

# Network
alias ports='netstat -tulanp'
alias ping='ping -c 5'
alias fastping='ping -c 100 -s 2'
alias conncount="netstat -tan | awk '{print \$6}' | sort | uniq -c"

# Development shortcuts
alias cls='clear'
alias h='history'
alias j='jobs'
alias path='echo $PATH | tr ":" "\n"'

# Weather (requires curl)
# Note: weather() function is defined in functions file instead of alias
alias forecast='curl -s "https://wttr.in/"'

# =============================================================================
# Development Tools
# =============================================================================

# Git shortcuts (more extensive git aliases in gitconfig)
alias g='git'
alias ga='git add'
alias gb='git branch'
alias gc='git commit'
alias gco='git checkout'
alias gd='git diff'
alias gl='git log --oneline'
alias gp='git push'
alias gs='git status'
alias gst='git status'
alias gup='git pull && git submodule update'
alias gcl='git clean -fd && git reset --hard'

# Enhanced git workflow aliases
alias mygh='$DOTFILES/config/workflow/git-helpers'
alias gsave='$DOTFILES/config/workflow/git-helpers save'
alias gpull='$DOTFILES/config/workflow/git-helpers pull'
alias gnew='$DOTFILES/config/workflow/git-helpers new'
alias gswitch='$DOTFILES/config/workflow/git-helpers switch'
alias gclean='$DOTFILES/config/workflow/git-helpers clean'

# Go development aliases
alias go.build='go build ./...'
alias go.test='go test ./...'
alias go.run='go run .'
alias go.fmt='go fmt ./...'
alias go.vet='go vet ./...'
alias go.tidy='go mod tidy'

# Modern alternatives - Define cat function to use brew-installed bat
cat() {
    if command -v bat >/dev/null 2>&1; then
        # If it looks like help or BSD cat usage, use original cat
        if [[ "$1" =~ ^-{1,2}(help|h)$ ]] || [[ "$#" -eq 0 && ! -t 0 ]]; then
            command cat "$@"
        else
            command bat --style=plain "$@"
        fi
    else
        command cat "$@"
    fi
}

# Set up other bat-related aliases if bat is available
if command -v bat >/dev/null 2>&1; then
    alias less='bat --style=plain --paging=always'
fi

# fd is available as independent command (not aliased to find)


if command -v zoxide >/dev/null 2>&1; then
    alias cd='z'
fi

# Editor shortcuts
alias v='$EDITOR'
alias vim='$EDITOR'
alias vi='$EDITOR'
alias e='$EDITOR'

# =============================================================================
# Development Environment
# =============================================================================

# Node.js
alias npm-update='npm update -g'
alias npm-list='npm list -g --depth=0'
alias npx='npx --yes'

# Python
alias py='python3'
alias pip='pip3'
alias venv='python3 -m venv'
alias activate='source venv/bin/activate'

# Docker
alias d='docker'
alias dc='docker-compose'
alias dcu='docker-compose up -d'
alias dcd='docker-compose down'
alias dcl='docker-compose logs -f'
alias dps='docker ps'
alias dpsa='docker ps -a'

# Kubernetes
alias k='kubectl'
alias kgp='kubectl get pods'
alias kgs='kubectl get services'
alias kgd='kubectl get deployments'

# =============================================================================
# File Operations & Archives
# =============================================================================

# Create directories with parents
alias mkdir='mkdir -pv'

# Archive operations
alias tar-create='tar -czf'
alias tar-extract='tar -xzf'
alias tar-list='tar -tzf'

# Quick file creation
alias touch='touch -c'

# Find large files - see functions file for findbig implementation
alias ducks='du -cks * 2>/dev/null | sort -rn | head'

# =============================================================================
# Network & Web
# =============================================================================

# HTTP requests
alias get='curl --location --progress-bar'
alias post='curl --location --progress-bar --data'
alias header='curl --location --head'

# Note: json() function is defined in functions file instead of alias

# Web server
alias serve='python3 -m http.server'
alias serve-here='python3 -m http.server 8000'

# =============================================================================
# Utility Functions as Aliases
# =============================================================================

# Enhanced curl with timing and response details
curly() {
    if [[ $# -eq 0 ]]; then
        echo "Usage: curly <url> [curl options]"
        echo "Enhanced curl with headers and detailed timing information"
        return 1
    fi

    local url="$1"
    shift

    echo "🌐 Fetching: $url"
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

    # Show headers
    echo "📋 Headers:"
    curl -Is "$url" "$@" | while IFS= read -r line; do
        echo "   $line"
    done

    echo
    echo "⏱️  Timing Details:"
    curl -o /dev/null -s -w "\
   DNS Lookup:        %{time_namelookup}s
   TCP Connect:       %{time_connect}s
   TLS Handshake:     %{time_appconnect}s
   Pre-transfer:      %{time_pretransfer}s
   Redirect:          %{time_redirect}s
   Start Transfer:    %{time_starttransfer}s
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Total Time:        %{time_total}s

   HTTP Code:         %{http_code}
   Size Downloaded:   %{size_download} bytes
   Speed:             %{speed_download} bytes/sec
" "$url" "$@"
}

# Enhanced grep with useful defaults
alias grep='grep --color=auto -n -H'
alias egrep='egrep --color=auto -n -H'
alias fgrep='fgrep --color=auto -n -H'

# Smart grep using fd and ripgrep
if command -v fd >/dev/null 2>&1 && command -v rg >/dev/null 2>&1; then
    alias vgrep='fd --type f --exclude node_modules --exclude .git --exclude logs --exclude doc --exclude vendor --exclude dist --exclude webpack --exclude static --exec rg --line-number --ignore-case'
else
    alias vgrep="find . -type f -and -not -path './node_modules/*' -and -not -path './.git/*' -and -not -path './logs/*' -and -not -path './doc/*' -and -not -path './vendor/*' -and -not -path './dist/*' -and -not -path './webpack/*' -and -not -path './static/*' -print0 | xargs -0 grep -nir"
fi

# Human readable sizes
alias du1='du --max-depth=1'
alias du2='du --max-depth=2'

# Date/time
alias now='date +"%T"'
alias nowtime=now
alias nowdate='date +"%d-%m-%Y"'

# =============================================================================
# System Specific Aliases
# =============================================================================

# macOS specific
if [[ "$OSTYPE" == "darwin"* ]]; then
    # Show/hide hidden files in Finder
    alias showfiles='defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder'
    alias hidefiles='defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder'

    # Empty trash
    alias emptytrash='sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* "delete from LSQuarantineEvent"'

    # Copy/paste from command line
    alias pbcopy='pbcopy'
    alias pbpaste='pbpaste'

    # Lock screen
    alias lock='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'

# Linux specific
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    # Copy/paste for X11
    if command -v xclip >/dev/null 2>&1; then
        alias pbcopy='xclip -selection clipboard'
        alias pbpaste='xclip -selection clipboard -o'
    elif command -v xsel >/dev/null 2>&1; then
        alias pbcopy='xsel --clipboard --input'
        alias pbpaste='xsel --clipboard --output'
    fi

    # Package managers
    if command -v apt >/dev/null 2>&1; then
        alias update='sudo apt update && sudo apt upgrade'
        alias upgrade='sudo apt-get update && sudo apt-get upgrade && sudo apt-get clean'
        alias install='sudo apt install'
        alias search='apt search'
    elif command -v yum >/dev/null 2>&1; then
        alias update='sudo yum update'
        alias install='sudo yum install'
        alias search='yum search'
    elif command -v pacman >/dev/null 2>&1; then
        alias update='sudo pacman -Syu'
        alias install='sudo pacman -S'
        alias search='pacman -Ss'
    fi
fi

# =============================================================================
# Dotfiles Management
# =============================================================================

alias dotfiles='cd $DOTFILES'
# reload function defined in functions file
alias edit-zsh='$EDITOR ~/.zshrc'
alias edit-aliases='$EDITOR $DOTFILES/config/zsh/aliases'
