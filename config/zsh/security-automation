# Security Automation

# =============================================================================
# Environment File Security
# =============================================================================

# Secure .env files
secure_env_files() {
    local env_files=(".env" ".env.local" ".env.development" ".env.production")
    local updated=false

    for env_file in "${env_files[@]}"; do
        [[ ! -f "$env_file" ]] && continue

        # Set secure permissions
        chmod 600 "$env_file" 2>/dev/null

        # Add to .gitignore if missing
        if [[ -f ".gitignore" ]] && ! grep -q "^${env_file}$" .gitignore 2>/dev/null; then
            echo "$env_file" >> .gitignore
            updated=true
        fi
    done

    [[ "$updated" == "true" ]] && echo "Updated .gitignore with environment files"
}

# =============================================================================
# SSH Security
# =============================================================================

# Check SSH key permissions
check_ssh_security() {
    [[ ! -d "$HOME/.ssh" ]] && return

    echo "SSH Security Check:"

    # Check directory permissions
    local ssh_perms=$(stat -f "%Lp" "$HOME/.ssh" 2>/dev/null || stat -c "%a" "$HOME/.ssh" 2>/dev/null)
    [[ "$ssh_perms" != "700" ]] && echo "  Fix SSH dir: chmod 700 ~/.ssh"

    # Check private key permissions
    for key in "$HOME/.ssh"/id_*; do
        [[ ! -f "$key" || "$key" == *".pub" ]] && continue
        local perms=$(stat -f "%Lp" "$key" 2>/dev/null || stat -c "%a" "$key" 2>/dev/null)
        [[ "$perms" != "600" ]] && echo "  Fix key $key: chmod 600 $key"
    done
}

# =============================================================================
# Commands
# =============================================================================

alias seccheck='check_ssh_security'
alias envcheck='secure_env_files'
