#!/usr/bin/env bash
# Project Initializer - Clean Version

set -euo pipefail

# Source utilities
source "$(dirname "${BASH_SOURCE[0]}")/utils"

# Templates (minimal, practical)
create_nodejs() {
    local name="$1" dir="$2"

    cat > "$dir/package.json" <<EOF
{
  "name": "$name",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "dev": "node --watch index.js",
    "test": "node --test"
  }
}
EOF

    echo "console.log('Hello from $name!');" > "$dir/index.js"
    echo "node_modules/" > "$dir/.gitignore"

    log_success "Node.js project '$name' created"
}

create_python() {
    local name="$1" dir="$2"

    cat > "$dir/main.py" <<EOF
#!/usr/bin/env python3

def main():
    print(f"Hello from $name!")

if __name__ == "__main__":
    main()
EOF

    cat > "$dir/requirements.txt" <<EOF
# Add your dependencies here
EOF

    cat > "$dir/.gitignore" <<EOF
__pycache__/
*.pyc
.venv/
EOF

    log_success "Python project '$name' created"
}

create_go() {
    local name="$1" dir="$2"

    cat > "$dir/go.mod" <<EOF
module $name

go 1.21
EOF

    cat > "$dir/main.go" <<EOF
package main

import "fmt"

func main() {
    fmt.Printf("Hello from %s!\n", "$name")
}
EOF

    echo "/$name" > "$dir/.gitignore"

    log_success "Go project '$name' created"
}

# Main function
main() {
    local template="" name=""

    # Simple argument parsing
    while [[ $# -gt 0 ]]; do
        case $1 in
            -t|--template) template="$2"; shift 2 ;;
            -h|--help) echo "Usage: $0 [-t template] <name>"; echo "Templates: nodejs, python, go"; exit 0 ;;
            -*) echo "Unknown option: $1" >&2; exit 1 ;;
            *) name="$1"; shift ;;
        esac
    done

    # Validate inputs
    [[ -z "$name" ]] && { echo "Project name required" >&2; exit 1; }
    [[ -d "$name" ]] && { echo "Directory '$name' already exists" >&2; exit 1; }

    # Select template if not provided
    if [[ -z "$template" ]]; then
        echo "Select template:"
        echo "1) nodejs"
        echo "2) python"
        echo "3) go"
        read -p "Choice [1-3]: " choice
        case $choice in
            1) template="nodejs" ;;
            2) template="python" ;;
            3) template="go" ;;
            *) echo "Invalid choice" >&2; exit 1 ;;
        esac
    fi

    # Create project
    mkdir -p "$name"
    cd "$name"

    case "$template" in
        nodejs) create_nodejs "$name" "." ;;
        python) create_python "$name" "." ;;
        go) create_go "$name" "." ;;
        *) echo "Unknown template: $template" >&2; exit 1 ;;
    esac

    # Initialize git
    git init -q
    git add .
    git commit -q -m "Initial commit"

    echo "Project ready: cd $name"
}

main "$@"